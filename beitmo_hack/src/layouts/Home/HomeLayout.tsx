import React from "react";
import { EventList } from "../../ui/Event";
import { NewsList } from "../../ui/News";
import { TgChannel } from "../../ui/TgChannel";
import { Section } from "../../ui/Section";
import { Text } from "../../ui/Text";
import { FeedbackWidget } from "../../ui/Feedback";
import styles from "./home.styles.module.scss";
import ColorMode from "../../ui/Button/DarkThemeButton";
import {User} from "../../lib/types/dto/user.dto";
import {Event} from "../../lib/types/dto/event.dto";
import {News} from "../../lib/types/dto/news.dto";

interface IProps {
	children?: React.ReactNode;
	user: User | null;
	events: Event[] | [];
	news: null | [] | News[];
}
const HomeLayout = ({ children, user, events, news}: IProps) => {

	return (
		<>
			{children}
			<Section margin={16}>
				<Section margin={10}>
					<div className={styles.headingWrapper}>
						<Text as="h1">–ü—Ä–∏–≤–µ—Ç, {user?.fullName}! üëã</Text>
						<ColorMode/>
					</div>
				</Section>
				<Text as="p" className={styles.description}>
					–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–∏—Å ITMO.EVENTS, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
					<br />
					–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ò–¢–ú–û.
				</Text>
			</Section>
			{events !== [] && (
				<EventList events={events} />
			)}
			<Section className={styles.infoContent}>
				<NewsList news={news} />
				<TgChannel/>
				<FeedbackWidget />
			</Section>
		</>
	);
};

export default HomeLayout;
